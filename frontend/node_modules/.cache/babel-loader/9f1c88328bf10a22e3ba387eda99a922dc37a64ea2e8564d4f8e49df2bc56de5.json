{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gogul\\\\OneDrive\\\\Desktop\\\\fake-news-detector\\\\frontend\\\\src\\\\components\\\\LiveNews.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './LiveNews.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LiveNews() {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState('general');\n  const [error, setError] = useState(null);\n  const categories = ['general', 'business', 'technology', 'science', 'health', 'sports', 'entertainment'];\n\n  // Wrap fetchNews in useCallback so it can be safely used in useEffect\n  const fetchNews = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`http://localhost:5000/api/live-news?category=${category}`);\n      const data = await response.json();\n      if (response.ok) {\n        setArticles(data.articles || []);\n      } else {\n        setError(data.error || 'Failed to fetch news');\n      }\n    } catch (err) {\n      setError('⚠️ Failed to connect to server. Make sure backend is running.');\n    } finally {\n      setLoading(false);\n    }\n  }, [category]); // include category as dependency\n\n  // useEffect now safely depends on fetchNews\n  useEffect(() => {\n    fetchNews();\n  }, [fetchNews]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"live-news-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(LiveNews, \"X2NbOVxlesL+K/JeNpskLXEjHQE=\");\n_c = LiveNews;\nexport default LiveNews;\nvar _c;\n$RefreshReg$(_c, \"LiveNews\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","LiveNews","_s","articles","setArticles","loading","setLoading","category","setCategory","error","setError","categories","fetchNews","response","fetch","data","json","ok","err","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Gogul/OneDrive/Desktop/fake-news-detector/frontend/src/components/LiveNews.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './LiveNews.css';\r\n\r\nfunction LiveNews() {\r\n  const [articles, setArticles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [category, setCategory] = useState('general');\r\n  const [error, setError] = useState(null);\r\n\r\n  const categories = [\r\n    'general',\r\n    'business',\r\n    'technology',\r\n    'science',\r\n    'health',\r\n    'sports',\r\n    'entertainment'\r\n  ];\r\n\r\n  // Wrap fetchNews in useCallback so it can be safely used in useEffect\r\n  const fetchNews = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/live-news?category=${category}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setArticles(data.articles || []);\r\n      } else {\r\n        setError(data.error || 'Failed to fetch news');\r\n      }\r\n    } catch (err) {\r\n      setError('⚠️ Failed to connect to server. Make sure backend is running.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [category]); // include category as dependency\r\n\r\n  // useEffect now safely depends on fetchNews\r\n  useEffect(() => {\r\n    fetchNews();\r\n  }, [fetchNews]);\r\n\r\n  return (\r\n    <div className=\"live-news-container\">\r\n      {/* ... your existing JSX remains unchanged ... */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiveNews;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,UAAU,GAAG,CACjB,SAAS,EACT,UAAU,EACV,YAAY,EACZ,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,eAAe,CAChB;;EAED;EACA,MAAMC,SAAS,GAAGd,WAAW,CAAC,YAAY;IACxCQ,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gDAAgDP,QAAQ,EAC1D,CAAC;MACD,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACfb,WAAW,CAACW,IAAI,CAACZ,QAAQ,IAAI,EAAE,CAAC;MAClC,CAAC,MAAM;QACLO,QAAQ,CAACK,IAAI,CAACN,KAAK,IAAI,sBAAsB,CAAC;MAChD;IACF,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZR,QAAQ,CAAC,+DAA+D,CAAC;IAC3E,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB;EACAV,SAAS,CAAC,MAAM;IACde,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACEZ,OAAA;IAAKmB,SAAS,EAAC;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/B,CAAC;AAEV;AAACrB,EAAA,CAjDQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}